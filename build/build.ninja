# This is the build file for project "QuarkChain"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule cpp_COMPILER
 command = c++ $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C++ object $out

# Rules for linking.

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

rule SHSYM
 command = /home/styles/anaconda3/bin/meson --internal symbolextractor /home/styles/blockchain/Quark/build $in $IMPLIB $out $CROSS
 description = Generating symbol file $out
 restat = 1

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /home/styles/anaconda3/bin/meson --internal regenerate /home/styles/blockchain/Quark /home/styles/blockchain/Quark/build --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build src/libquarksrc.so.p/blockchain.cc.o: cpp_COMPILER ../src/blockchain.cc
 DEPFILE = src/libquarksrc.so.p/blockchain.cc.o.d
 DEPFILE_UNQUOTED = src/libquarksrc.so.p/blockchain.cc.o.d
 ARGS = -Isrc/libquarksrc.so.p -Isrc -I../src -Iinclude -I../include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -O0 -g -fPIC

build src/libquarksrc.so.p/block.cc.o: cpp_COMPILER ../src/block.cc
 DEPFILE = src/libquarksrc.so.p/block.cc.o.d
 DEPFILE_UNQUOTED = src/libquarksrc.so.p/block.cc.o.d
 ARGS = -Isrc/libquarksrc.so.p -Isrc -I../src -Iinclude -I../include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -O0 -g -fPIC

build src/libquarksrc.so.p/utils.cc.o: cpp_COMPILER ../src/utils.cc
 DEPFILE = src/libquarksrc.so.p/utils.cc.o.d
 DEPFILE_UNQUOTED = src/libquarksrc.so.p/utils.cc.o.d
 ARGS = -Isrc/libquarksrc.so.p -Isrc -I../src -Iinclude -I../include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -O0 -g -fPIC

build src/libquarksrc.so.p/libquarksrc.so.symbols: SHSYM src/libquarksrc.so
 IMPLIB = src/libquarksrc.so

build src/libquarksrc.so: cpp_LINKER src/libquarksrc.so.p/blockchain.cc.o src/libquarksrc.so.p/block.cc.o src/libquarksrc.so.p/utils.cc.o | /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/x86_64-linux-gnu/libssl.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,libquarksrc.so /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so -Wl,--end-group

build quark.p/main.cc.o: cpp_COMPILER ../main.cc
 DEPFILE = quark.p/main.cc.o.d
 DEPFILE_UNQUOTED = quark.p/main.cc.o.d
 ARGS = -Iquark.p -I. -I.. -Iinclude -I../include -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -O0 -g

build quark: cpp_LINKER quark.p/main.cc.o | src/libquarksrc.so.p/libquarksrc.so.symbols
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined '-Wl,-rpath,$$ORIGIN/src' -Wl,-rpath-link,/home/styles/blockchain/Quark/build/src -Wl,--start-group src/libquarksrc.so -Wl,--end-group

# Test rules

build test: phony meson-internal__test

build meson-internal__test: CUSTOM_COMMAND all PHONY
 COMMAND = /home/styles/anaconda3/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build benchmark: phony meson-internal__benchmark

build meson-internal__benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /home/styles/anaconda3/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

# Install rules

build install: phony meson-internal__install

build meson-internal__install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /home/styles/anaconda3/bin/meson install --no-rebuild
 pool = console

build dist: phony meson-internal__dist

build meson-internal__dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /home/styles/anaconda3/bin/meson dist
 pool = console

# Suffix

build uninstall: phony meson-internal__uninstall

build meson-internal__uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /home/styles/anaconda3/bin/meson --internal uninstall
 pool = console

build all: phony meson-test-prereq meson-benchmark-prereq src/libquarksrc.so quark

build meson-test-prereq: phony 

build meson-benchmark-prereq: phony 

build clean: phony meson-internal__clean

build meson-internal__clean: CUSTOM_COMMAND PHONY
 COMMAND = /home/styles/anaconda3/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build ../include/meson.build ../src/meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build ../include/meson.build ../src/meson.build meson-private/coredata.dat: phony 

default all

